name: Pull-Request-CI

on:
  pull_request:
    branches:
      - dev
  push:
    branches:
      - dev

jobs:
  Build-and-Test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
       os: [ubuntu-latest]
       python-version: ["3.6", "3.7", "3.8", "3.9"]
    services:
      postgres:
        image: postgis/postgis:10-2.5
        env:
          POSTGRES_PASSWORD: NotTheDefault
          POSTGRES_DB: postgres
        ports:
          - 35432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5   
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Setup ENV
        uses: conda-incubator/setup-miniconda@v2
        with:
          miniconda-version: "latest"
          mamba-version: "*"
          use-mamba: true
          channels: conda-forge, defaults
          channel-priority: true
          activate-environment: autocnet
          environment-file: environment.yml
          python-version: ${{ matrix.python-version }}
      - name: Check build environment
        run: |
          conda list
      - name: Setup Test DB
        run: psql -h localhost -p 35432 -c 'create database template_postgis;' -U postgres
      - name: Install Python Package
        run: |
          python setup.py install
      - name: Test Python Package
        run: |
           pytest --cov-report=xml --cov=ale tests/pytests -vv
      - name: Upload Coverage
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
          verbose: true
        if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.9'
