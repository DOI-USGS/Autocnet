image: code.usgs.gov:5001/astrogeology/autocnet/mambaforge

services:
    - name: code.usgs.gov:5001/astrogeology/autocnet/postgis
      alias: postgres
      entrypoint: ["docker-entrypoint.sh"]
      command: ["postgres"]

variables:
    POSTGRES_HOST: postgres
    POSTGRES_USER: postgres
    POSTGRES_PASSWORD: NotTheDefault
    POSTGRES_HOST_AUTH_METHOD: trust

before_script:
  - mamba env create -f environment.yml -n autocnet_env
  - conda init
  - source /root/.bashrc
  - source activate autocnet_env
  - mamba install pip

stages:
  - test
  - deploy

unit-test:
  stage: test
  script:
    - mamba install --file test_requirements.txt
    - wget "https://asc-isisdata.s3.us-west-2.amazonaws.com/autocnet_test_data/B08_012650_1780_XN_02S046W.l1.cal.destriped.crop.cub" -P tests/test_subpixel_match/
    - wget "https://asc-isisdata.s3.us-west-2.amazonaws.com/autocnet_test_data/D16_033458_1785_XN_01S046W.l1.cal.destriped.crop.cub" -P tests/test_subpixel_match/
    - wget "https://asc-isisdata.s3.us-west-2.amazonaws.com/autocnet_test_data/J04_046447_1777_XI_02S046W.l1.cal.destriped.crop.cub" -P tests/test_subpixel_match/
    - psql -h $POSTGRES_HOST -c 'create database template_postgis;' -U postgres ;
    - psql template_postgis -h $POSTGRES_HOST -U postgres -c 'create extension postgis';
    - psql template_postgis -U $POSTGRES_USER -h $POSTGRES_HOST -c 'create extension postgis_topology';
    - psql -d template_postgis -U $POSTGRES_USER -h $POSTGRES_HOST -c 'GRANT ALL ON geometry_columns TO PUBLIC;';
    - psql -d template_postgis -U $POSTGRES_USER -h $POSTGRES_HOST -c 'GRANT ALL ON geography_columns TO PUBLIC;';
    - psql -d template_postgis -U $POSTGRES_USER -h $POSTGRES_HOST -c 'GRANT ALL ON spatial_ref_sys TO PUBLIC;';
    - pytest .

pages:
  stage: deploy 
  script:
    - mamba install --file doc_requirements.txt
    - sphinx-build -b html docs public
  artifacts:
    paths:
      - public
  rules:
    - if: $CI_COMMIT_BRANCH == "main"